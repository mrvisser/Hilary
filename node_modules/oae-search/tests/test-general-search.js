/*
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var assert = require('assert');
var RestAPI = require('oae-rest');
var RestContext = require('oae-rest/lib/model').RestContext;
var TestsUtil = require('oae-tests');

describe('Search', function() {

    var anonymousRestContext = null;
    var camAdminRestContext = null;

    /**
     * Function that will fill up the anonymous and admin REST context
     */
    before(function(callback) {
        // create admin and anonymous REST contexts
        anonymousRestContext = TestsUtil.createAnonymousRestContext(global.oaeTests.tenants.cam.baseUrl);
        camAdminRestContext = TestsUtil.createAdminRestContext(global.oaeTests.tenants.cam.baseUrl);
        callback();
    });

    describe('General Search', function() {

        it('verify user access scope', function(callback) {
            TestsUtil.generateTestGroups(camAdminRestContext, 5, function(err, groups) {
                assert.ok(!err, JSON.stringify(err));
                var groupIds = _.keys(groups);

                TestsUtil.generateTestUsers(camAdminRestContext, 2, function(err, users) {
                    assert.ok(!err, JSON.stringify(err));
                    users = _.values(users);

                    TestsUtil.generateGroupHierarchy(camAdminRestContext, groupIds, 'member', function(err) {
                        assert.ok(!err, JSON.stringify(err));

                        TestsUtil.generateGroupHierarchy(camAdminRestContext, [groupIds[4], users[0].user.id], 'member', function(err) {
                            assert.ok(!err, JSON.stringify(err));

                            RestAPI.Content.createLink(camAdminRestContext, 'Test Content 1', 'Test content description 1', 'public', 'http://www.sakaiproject.org/',  [], [groupIds[0]], function(err, contentObj) {
                                assert.ok(!err, JSON.stringify(err));

                                RestAPI.Authentication.login(users[0].restContext, users[0].user.username, 'password', function(err) {
                                    assert.ok(!err, JSON.stringify(err));

                                    RestAPI.Search.searchGeneral(users[0].restContext, 'all', { size: 10000 }, function(err, results) {
                                        assert.ok(!err, JSON.stringify(err));

                                        var hasDoc = false;
                                        results.results.forEach(function(doc) {
                                            if (doc._id === contentObj.contentId) {
                                                hasDoc = true;
                                            }
                                        });
                                        assert.ok(hasDoc);
                                        callback();
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
});
